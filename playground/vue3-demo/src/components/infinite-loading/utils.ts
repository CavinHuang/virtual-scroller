export const genUniqueId = (prefix: number | string) => {
  return `${prefix}$${Math.random().toString(16).substr(9)}`;
};

export const random = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1)) + min

const sentence1  = ['今晚我搞砸了，又输掉了一场战斗，', '我仍然会犯错误，但我会重新开始，', '我不断摔倒，一次次触底，', '但现在我总是能重新站起来看看下一步，', '鸟儿飞翔时不仅仅飞翔，它们也会跌倒再次起飞，', '没有人能在不经历挫折中学到东西，', '我不会放弃，我不会屈服，', '直到我到达终点，然后我会重新开始，', '不，我不会放弃，我想尝试一切，', '我想尝试，即使可能失败，', '我不会放弃，我不会屈服，', '直到我到达终点，然后我会重新开始，', '不，我不会放弃，我想尝试一切，', '我想尝试，即使可能失败，', '看看你已经走了多远，你充满了爱，', '宝贝，你已经做得足够好了，这让你喘不过气，', '不要自责，不需要跑得太快，', '有时我们最后完成，但我们已经尽力了，', '我不会放弃，我不会屈服，', '直到我到达终点，然后我会重新开始，', '不，我不会放弃，我想尝试一切，', '我想尝试，即使可能失败，', '我会继续犯错，', '我会每天都犯新的错误，', '那些新错误。']

const sentence2 = [
'我会奔跑，我会攀登，我会翱翔',
'我无人能敌',
'冲破束缚，勇往直前',
'是的，我相信自己',
'过去是我们的全部，但并不决定我们的未来',
'因此，我会梦想成真，目光所及尽是星辰',
'只有当你跌倒时，你才会飞翔',
'当你的梦想变为现实时，你是不可阻挡的',
'抓住机会，追逐太阳，寻找美丽',
'在黑暗中发光，把尘埃变成黄金',
'我们会梦想成真',
'我们会梦想成真',
'我会追逐，我会伸手，我会翱翔',
'直到我粉身碎骨，直到我支离破碎',
'像夜晚的鸟儿一样从牢笼中飞出',
'我知道我在变化，我知道我在进步',
'变成比以前更好的自己',
'即使需要一千次生命，我也要为之奋斗',
'只有当你跌倒时，你才会飞翔',
'当你的梦想变为现实时，你是不可阻挡的',
'抓住机会，追逐太阳，寻找美丽',
'在黑暗中发光，把尘埃变成黄金',
'我们会梦想成真',
'我们会梦想成真',
'从底部到顶部',
'我们激起狂野的火焰',
'永不放弃，永不停歇',
'这是我们余生的信条',
'从底部到顶部',
'我们激起狂野的火焰',
'永不放弃，永不停歇',
'只有当你跌倒时，你才会飞翔',
'当你的梦想变为现实时，你是不可阻挡的',
'抓住机会，追逐太阳，寻找美丽',
'在黑暗中发光，把尘埃变成黄金',
'我们会梦想成真',
'我们会梦想成真',
];

const sentence3 = [
'我几乎可以看到它',
'那个我一直梦寐以求的梦想',
'但是脑海里有一个声音说',
'你永远无法实现它',
'每迈出一步',
'每做出一举动',
'都感到毫无方向',
'我的信仰动摇了',
'但我必须继续努力',
'必须保持头脑高昂',
'总会有另一座山',
'我总是想要让它动起来',
'总会是一场艰苦的战斗',
'有时我必须失败',
'不在于我有多快到达终点',
'也不在于另一边等待着什么',
'而在于攀登的过程',
'我面临的挑战',
'我所抓住的机会',
'有时会把我打倒',
'但我不会崩溃',
'我可能不知道',
'但这些时刻是我最珍视的',
'我只需继续前行',
'我必须坚强',
'只需不断向前推进',
'总会有另一座山',
'我总是想要让它动起来',
'总会是一场艰苦的战斗',
'有时你必须失败',
'不在于我有多快到达终点',
'也不在于另一边等待着什么',
'而在于攀登的过程',
'一直前行',
'不断攀登',
'保持信仰',
'宝贝 这一切',
'都是关于攀登',
'保持你的信仰',
'哦 噢 哦',
];

export const sentenceArray  = [sentence1, sentence2, sentence3]

export const pickRandom = (arr: any[]) => {
  const index = Math.floor(Math.random() * arr.length);
  return arr[index];
}

const ua = navigator.userAgent;
const Android = !!ua.match(/Android/i);
const iOS = !!ua.match(/iPhone|iPad|iPod/i);
export const isMobile = Android || iOS;

export const getSentences = (min = 1, max = 6) => {
  const sentences = sentenceArray[pickRandom([0, 1, 2])];
  const results = [];

  let counts = random(min, isMobile ? 3 : max);
  while (counts--) {
    results.push(pickRandom(sentences));
  }
  return results.join('. ') + '.';
}